user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

env APIGATEWAY;

http {
    gzip_static on;  #对静态文件的处理模块，可以读取预先压缩的gz文件,可以减少每次请求进行gzip压缩的CPU资源消耗。
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    client_max_body_size 1024m;
    gzip  on;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    proxy_read_timeout 600;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    types_hash_max_size 2048;
    resolver_timeout 10s;
    resolver 127.0.0.1 ipv6=off;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    #include /etc/nginx/conf.d/*.conf;

    perl_set $apigateway 'sub { return $ENV{"APIGATEWAY"}; }';

    server {
        listen      80;
	    server_name  127.0.0.1;

        # Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;

		location / {
			root   /usr/share/nginx/html/;
			index  index.html;
		}

		error_page   500 502 503 504 404 /50x.html;
		location = /50x.html {
			root   /usr/share/nginx/html;
		}

		location /v1/ {
			proxy_pass http://$apigateway$request_uri;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

    }

}

